.offset-start.col-xs-12.col-sm-12.col-md-12.col-lg-12.well
	=render "shared/flash"
	.pull-left
		%h4
			Tasks
	.pull-right
		%a.btn.btn-primary{ :href => new_task_url }
			%i.fui-plus
			Start New Task
		%a.btn.btn-info{ :href => new_scheduled_task_url }
			%i.fui-plus
			Schedule New Task
	.clearfix
	.offset-start
	%table.table.table-striped
		%thead
			%th Task Name
			%th Type
			%th Project
			%th Action
			%th Status
			%th Controls
		- for task in @tasks
			%tr
				%td 
					- if task.task_status == TaskStatus.SCHEDULED
						%a{ :href => scheduled_task_url(task.id) } 
							=task.name
					- else
						%a{ :href => task_url(task.id) } 
							=task.name
				%td= task.task_type.name
				%td= task.task_project.name
				%td= task.task_action.name
				%td
					- if task.task_status == TaskStatus.STARTED
						%span.label.label-success Started
					- elsif task.task_status == TaskStatus.RESUMED
						%span.label.label-success Resumed
					- elsif task.task_status == TaskStatus.PAUSED
						%span.label.label-warning Paused
					- elsif task.task_status == TaskStatus.SCHEDULED
						%span.label.label-info Scheduled
				%td
					- if task.task_status != TaskStatus.SCHEDULED
						- if task.task_status == TaskStatus.STARTED || task.task_status == TaskStatus.RESUMED
							%a.btn.btn-warning{ :href => pause_task_url(task.id) } 
								%i.unicon-pause
								Pause
						- elsif task.task_status == TaskStatus.PAUSED
							%a.btn.btn-success{ :href => resume_task_url(task.id) } 
								%i.unicon-play
								Resume
						%a.btn.btn-danger{ :href => stop_task_url(task.id) } 
							%i.unicon-stop
							Complete
	= will_paginate @tasks, renderer: BootstrapPagination::Rails